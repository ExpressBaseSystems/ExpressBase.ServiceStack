@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    @*<script src="https://unpkg.com/vue/dist/vue.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.26/vue.min.js"></script>
    <script src="https://cdn.jsdelivr.net/vue.resource/1.0.3/vue-resource.min.js"></script>
    <script src="http://cdn.jsdelivr.net/vue.table/1.5.3/vue-table.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/1.11.8/semantic.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/semantic-ui/2.2.6/semantic.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment-with-locales.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" rel="stylesheet" />
    
}


<div id="app" class="ui vertical stripe segment">
    <div class="ui container">
        <div id="content" class="ui basic segment">
            <h3 class="ui header">List of Users</h3>
            <label>Search:</label>
            <input v-model="searchFor" v-on:keyup.enter="setFilter">
            <vuetable 
                      api-url="http://localhost:53125/forms?format=json"
                      table-wrapper="#content"
                      :fields="columns"
                      :item-actions="itemActions"
                      per-page="5"
                      pagination-path=""
                      multi-sort="true"
                      :sort-order="[{ field: 'name', direction: 'asc' }]"
                      :append-params="moreParams"
                >
            </vuetable>
        </div>
    </div>
</div>

<script>
        new Vue({
            el: '#app',
            data: {
                columns: [
                    'id',
                    'name',
                    'bytea',
                    '__actions'
                ],
                itemActions: [
                    { name: 'view-item', label: '', icon: 'zoom icon', class: 'ui teal button' },
                    { name: 'edit-item', label: '', icon: 'edit icon', class: 'ui orange button'},
                    { name: 'delete-item', label: '', icon: 'delete icon', class: 'ui red button' }
                ],
                moreParams: []
            },
            methods: {
                viewProfile: function (name) {
                    console.log('view profile with id:', name)
                    
                },
                setFilter: function () {
                    this.moreParams = [
                        'filter=' + this.searchFor
                    ]
                    this.$nextTick(function () {
                        this.$broadcast('vuetable:refresh')
                    })
                }
            },
            events: {
                'vuetable:action': function(action, data) {
                    console.log('vuetable:action', action, data)
                    if (action == 'view-item') {
                        this.viewProfile(data.name)
                        //sweetAlert(action, data.id)
                    }
                },
                'vuetable:load-error': function(response) {
                    console.log('Load Error: ', response)
                }
            }
        })
</script>











//-----------------------------------------------------------------
@*<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    th {
        background-color: #4CAF50;
        color: white;
    }
</style>

<div id="sam">
    <div>
        <input v-on:click="ready" v-model="search">
    </div>
    <div>
        <table class="vuetable">
            <thead>
                <tr>
                    <th v-for="column in columns">
                        <a href="#" v-on:click="sortBy(column)">{{column}}</a>
                    </th>
                </tr>
            </thead>
            <tbody >
                @*<tr v-for="row in rows | filterBy search | orderBy parm order">
                  
                    <td v-for="column in columns">{{row[column]}}</td>*@
             @*   <tr>
                    <td>{{rows}}</td>
                </tr>
            </tbody>

        </table>
       
    </div>


</div>

<script>
    var vm = new Vue({
        el: '#sam',
        data: {
            parm: '',

            search: '',
            order:'1',
            columns:['id','name'],
            rows: ''
        },
        methods: {
            sortBy: function (parm,order) {
                this.order=this.order*-1
                this.parm = parm

            },
            ready: function () {
                alert("hai");
                this.$http.get('/Sample/sample')
                    .then(function(response){
                        this.rows = response.data
                    }.bind(this))
            }

        }


    });
    
</script>*@